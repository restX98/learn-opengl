#include <array>
#include <string>


#define MATERIAL_EMERALD_AMBIENT {0.0215f, 0.1745f, 0.0215f}
#define MATERIAL_EMERALD_DIFFUSE {0.07568f, 0.61424f, 0.07568f}
#define MATERIAL_EMERALD_SPECULAR {0.633f, 0.727811f, 0.633f}
#define MATERIAL_EMERALD_SHININESS (0.6f * 128.0f)

#define MATERIAL_JADE_AMBIENT {0.135f, 0.2225f, 0.1575f}
#define MATERIAL_JADE_DIFFUSE {0.54f, 0.89f, 0.63f}
#define MATERIAL_JADE_SPECULAR {0.316228f, 0.316228f, 0.316228f}
#define MATERIAL_JADE_SHININESS (0.1f * 128.0f)

#define MATERIAL_OBSIDIAN_AMBIENT {0.05375f, 0.05f, 0.06625f}
#define MATERIAL_OBSIDIAN_DIFFUSE {0.18275f, 0.17f, 0.22525f}
#define MATERIAL_OBSIDIAN_SPECULAR {0.332741f, 0.328634f, 0.346435f}
#define MATERIAL_OBSIDIAN_SHININESS (0.3f * 128.0f)

#define MATERIAL_PEARL_AMBIENT {0.25f, 0.20725f, 0.20725f}
#define MATERIAL_PEARL_DIFFUSE {1.0f, 0.829f, 0.829f}
#define MATERIAL_PEARL_SPECULAR {0.296648f, 0.296648f, 0.296648f}
#define MATERIAL_PEARL_SHININESS (0.088f * 128.0f)

#define MATERIAL_RUBY_AMBIENT {0.1745f, 0.01175f, 0.01175f}
#define MATERIAL_RUBY_DIFFUSE {0.61424f, 0.04136f, 0.04136f}
#define MATERIAL_RUBY_SPECULAR {0.727811f, 0.626959f, 0.626959f}
#define MATERIAL_RUBY_SHININESS (0.6f * 128.0f)

#define MATERIAL_TURQUOISE_AMBIENT {0.1f, 0.18725f, 0.1745f}
#define MATERIAL_TURQUOISE_DIFFUSE {0.396f, 0.74151f, 0.69102f}
#define MATERIAL_TURQUOISE_SPECULAR {0.297254f, 0.30829f, 0.306678f}
#define MATERIAL_TURQUOISE_SHININESS (0.1f * 128.0f)

#define MATERIAL_BRASS_AMBIENT {0.329412f, 0.223529f, 0.027451f}
#define MATERIAL_BRASS_DIFFUSE {0.780392f, 0.568627f, 0.113725f}
#define MATERIAL_BRASS_SPECULAR {0.992157f, 0.941176f, 0.807843f}
#define MATERIAL_BRASS_SHININESS (0.21794872f * 128.0f)

#define MATERIAL_BRONZE_AMBIENT {0.2125f, 0.1275f, 0.054f}
#define MATERIAL_BRONZE_DIFFUSE {0.714f, 0.4284f, 0.18144f}
#define MATERIAL_BRONZE_SPECULAR {0.393548f, 0.271906f, 0.166721f}
#define MATERIAL_BRONZE_SHININESS (0.2f * 128.0f)

#define MATERIAL_CHROME_AMBIENT {0.25f, 0.25f, 0.25f}
#define MATERIAL_CHROME_DIFFUSE {0.4f, 0.4f, 0.4f}
#define MATERIAL_CHROME_SPECULAR {0.774597f, 0.774597f, 0.774597f}
#define MATERIAL_CHROME_SHININESS (0.6f * 128.0f)

#define MATERIAL_COPPER_AMBIENT {0.19125f, 0.0735f, 0.0225f}
#define MATERIAL_COPPER_DIFFUSE {0.7038f, 0.27048f, 0.0828f}
#define MATERIAL_COPPER_SPECULAR {0.256777f, 0.137622f, 0.086014f}
#define MATERIAL_COPPER_SHININESS (0.1f * 128.0f)

#define MATERIAL_GOLD_AMBIENT {0.24725f, 0.1995f, 0.0745f}
#define MATERIAL_GOLD_DIFFUSE {0.75164f, 0.60648f, 0.22648f}
#define MATERIAL_GOLD_SPECULAR {0.628281f, 0.555802f, 0.366065f}
#define MATERIAL_GOLD_SHININESS (0.4f * 128.0f)

#define MATERIAL_SILVER_AMBIENT {0.19225f, 0.19225f, 0.19225f}
#define MATERIAL_SILVER_DIFFUSE {0.50754f, 0.50754f, 0.50754f}
#define MATERIAL_SILVER_SPECULAR {0.508273f, 0.508273f, 0.508273f}
#define MATERIAL_SILVER_SHININESS (0.4f * 128.0f)

#define MATERIAL_BLACK_PLASTIC_AMBIENT {0.0f, 0.0f, 0.0f}
#define MATERIAL_BLACK_PLASTIC_DIFFUSE {0.01f, 0.01f, 0.01f}
#define MATERIAL_BLACK_PLASTIC_SPECULAR {0.5f, 0.5f, 0.5f}
#define MATERIAL_BLACK_PLASTIC_SHININESS (0.25f * 128.0f)

#define MATERIAL_CYAN_PLASTIC_AMBIENT {0.0f, 0.1f, 0.06f}
#define MATERIAL_CYAN_PLASTIC_DIFFUSE {0.0f, 0.50980392f, 0.50980392f}
#define MATERIAL_CYAN_PLASTIC_SPECULAR {0.50196078f, 0.50196078f, 0.50196078f}
#define MATERIAL_CYAN_PLASTIC_SHININESS (0.25f * 128.0f)

#define MATERIAL_GREEN_PLASTIC_AMBIENT {0.0f, 0.0f, 0.0f}
#define MATERIAL_GREEN_PLASTIC_DIFFUSE {0.1f, 0.35f, 0.1f}
#define MATERIAL_GREEN_PLASTIC_SPECULAR {0.45f, 0.55f, 0.45f}
#define MATERIAL_GREEN_PLASTIC_SHININESS (0.25f * 128.0f)

#define MATERIAL_RED_PLASTIC_AMBIENT {0.0f, 0.0f, 0.0f}
#define MATERIAL_RED_PLASTIC_DIFFUSE {0.5f, 0.0f, 0.0f}
#define MATERIAL_RED_PLASTIC_SPECULAR {0.7f, 0.6f, 0.6f}
#define MATERIAL_RED_PLASTIC_SHININESS (0.25f * 128.0f)

#define MATERIAL_WHITE_PLASTIC_AMBIENT {0.0f, 0.0f, 0.0f}
#define MATERIAL_WHITE_PLASTIC_DIFFUSE {0.55f, 0.55f, 0.55f}
#define MATERIAL_WHITE_PLASTIC_SPECULAR {0.7f, 0.7f, 0.7f}
#define MATERIAL_WHITE_PLASTIC_SHININESS (0.25f * 128.0f)

#define MATERIAL_YELLOW_PLASTIC_AMBIENT {0.0f, 0.0f, 0.0f}
#define MATERIAL_YELLOW_PLASTIC_DIFFUSE {0.5f, 0.5f, 0.0f}
#define MATERIAL_YELLOW_PLASTIC_SPECULAR {0.6f, 0.6f, 0.5f}
#define MATERIAL_YELLOW_PLASTIC_SHININESS (0.25f * 128.0f)

#define MATERIAL_BLACK_RUBBER_AMBIENT {0.02f, 0.02f, 0.02f}
#define MATERIAL_BLACK_RUBBER_DIFFUSE {0.01f, 0.01f, 0.01f}
#define MATERIAL_BLACK_RUBBER_SPECULAR {0.4f, 0.4f, 0.4f}
#define MATERIAL_BLACK_RUBBER_SHININESS (0.078125f * 128.0f)

#define MATERIAL_CYAN_RUBBER_AMBIENT {0.0f, 0.05f, 0.05f}
#define MATERIAL_CYAN_RUBBER_DIFFUSE {0.4f, 0.5f, 0.5f}
#define MATERIAL_CYAN_RUBBER_SPECULAR {0.04f, 0.7f, 0.7f}
#define MATERIAL_CYAN_RUBBER_SHININESS (0.078125f * 128.0f)

#define MATERIAL_GREEN_RUBBER_AMBIENT {0.0f, 0.05f, 0.0f}
#define MATERIAL_GREEN_RUBBER_DIFFUSE {0.4f, 0.5f, 0.4f}
#define MATERIAL_GREEN_RUBBER_SPECULAR {0.04f, 0.7f, 0.04f}
#define MATERIAL_GREEN_RUBBER_SHININESS (0.078125f * 128.0f)

#define MATERIAL_RED_RUBBER_AMBIENT {0.05f, 0.0f, 0.0f}
#define MATERIAL_RED_RUBBER_DIFFUSE {0.5f, 0.4f, 0.4f}
#define MATERIAL_RED_RUBBER_SPECULAR {0.7f, 0.04f, 0.04f}
#define MATERIAL_RED_RUBBER_SHININESS (0.078125f * 128.0f)

#define MATERIAL_WHITE_RUBBER_AMBIENT {0.05f, 0.05f, 0.05f}
#define MATERIAL_WHITE_RUBBER_DIFFUSE {0.5f, 0.5f, 0.5f}
#define MATERIAL_WHITE_RUBBER_SPECULAR {0.7f, 0.7f, 0.7f}
#define MATERIAL_WHITE_RUBBER_SHININESS (0.078125f * 128.0f)

#define MATERIAL_YELLOW_RUBBER_AMBIENT {0.05f, 0.05f, 0.0f}
#define MATERIAL_YELLOW_RUBBER_DIFFUSE {0.5f, 0.5f, 0.4f}
#define MATERIAL_YELLOW_RUBBER_SPECULAR {0.7f, 0.7f, 0.04f}
#define MATERIAL_YELLOW_RUBBER_SHININESS (0.078125f * 128.0f)

struct Material {
  std::array<float, 3> ambient;
  std::array<float, 3> diffuse;
  std::array<float, 3> specular;
  float shininess;
};

enum class MaterialType {
  Emerald,
  Jade,
  Obsidian,
  Pearl,
  Ruby,
  Turquoise,
  Brass,
  Bronze,
  Chrome,
  Copper,
  Gold,
  Silver,
  BlackPlastic,
  CyanPlastic,
  GreenPlastic,
  RedPlastic,
  WhitePlastic,
  YellowPlastic,
  BlackRubber,
  CyanRubber,
  GreenRubber,
  RedRubber,
  WhiteRubber,
  YellowRubber,
  Count // to keep track of number of materials
};

const std::array<std::string, static_cast<size_t>(MaterialType::Count)> MaterialNames = {
    "Emerald", "Jade", "Obsidian", "Pearl", "Ruby", "Turquoise", "Brass", "Bronze", "Chrome", "Copper",
    "Gold", "Silver", "BlackPlastic", "CyanPlastic", "GreenPlastic", "RedPlastic", "WhitePlastic",
    "YellowPlastic", "BlackRubber", "CyanRubber", "GreenRubber", "RedRubber", "WhiteRubber", "YellowRubber"
};

const std::array<Material, static_cast<size_t>(MaterialType::Count)> Materials = { {
    // Emerald
    {MATERIAL_EMERALD_AMBIENT, MATERIAL_EMERALD_DIFFUSE, MATERIAL_EMERALD_SPECULAR, MATERIAL_EMERALD_SHININESS},
    // Jade
    {MATERIAL_JADE_AMBIENT, MATERIAL_JADE_DIFFUSE, MATERIAL_JADE_SPECULAR, MATERIAL_JADE_SHININESS},
     // Obsidian
    {MATERIAL_OBSIDIAN_AMBIENT, MATERIAL_OBSIDIAN_DIFFUSE, MATERIAL_OBSIDIAN_SPECULAR, MATERIAL_OBSIDIAN_SHININESS},
    // Pearl
    {MATERIAL_PEARL_AMBIENT, MATERIAL_PEARL_DIFFUSE, MATERIAL_PEARL_SPECULAR, MATERIAL_PEARL_SHININESS},
    // Ruby
    {MATERIAL_RUBY_AMBIENT, MATERIAL_RUBY_DIFFUSE, MATERIAL_RUBY_SPECULAR, MATERIAL_RUBY_SHININESS},
    // Turquoise
    {MATERIAL_TURQUOISE_AMBIENT, MATERIAL_TURQUOISE_DIFFUSE, MATERIAL_TURQUOISE_SPECULAR, MATERIAL_TURQUOISE_SHININESS},
    // Brass
    {MATERIAL_BRASS_AMBIENT, MATERIAL_BRASS_DIFFUSE, MATERIAL_BRASS_SPECULAR, MATERIAL_BRASS_SHININESS},
    // Bronze
    {MATERIAL_BRONZE_AMBIENT, MATERIAL_BRONZE_DIFFUSE, MATERIAL_BRONZE_SPECULAR, MATERIAL_BRONZE_SHININESS},
    // Chrome
    {MATERIAL_CHROME_AMBIENT, MATERIAL_CHROME_DIFFUSE, MATERIAL_CHROME_SPECULAR, MATERIAL_CHROME_SHININESS},
    // Copper
    {MATERIAL_COPPER_AMBIENT, MATERIAL_COPPER_DIFFUSE, MATERIAL_COPPER_SPECULAR, MATERIAL_COPPER_SHININESS},
    // Gold
    {MATERIAL_GOLD_AMBIENT, MATERIAL_GOLD_DIFFUSE, MATERIAL_GOLD_SPECULAR, MATERIAL_GOLD_SHININESS},
    // Silver
    {MATERIAL_SILVER_AMBIENT, MATERIAL_SILVER_DIFFUSE, MATERIAL_SILVER_SPECULAR, MATERIAL_SILVER_SHININESS},
    // Black Plastic
    {MATERIAL_BLACK_PLASTIC_AMBIENT, MATERIAL_BLACK_PLASTIC_DIFFUSE, MATERIAL_BLACK_PLASTIC_SPECULAR, MATERIAL_BLACK_PLASTIC_SHININESS},
    // Cyan Plastic
    {MATERIAL_CYAN_PLASTIC_AMBIENT, MATERIAL_CYAN_PLASTIC_DIFFUSE, MATERIAL_CYAN_PLASTIC_SPECULAR, MATERIAL_CYAN_PLASTIC_SHININESS},
    // Green Plastic
    {MATERIAL_GREEN_PLASTIC_AMBIENT, MATERIAL_GREEN_PLASTIC_DIFFUSE, MATERIAL_GREEN_PLASTIC_SPECULAR, MATERIAL_GREEN_PLASTIC_SHININESS},
    // Red Plastic
    {MATERIAL_RED_PLASTIC_AMBIENT, MATERIAL_RED_PLASTIC_DIFFUSE, MATERIAL_RED_PLASTIC_SPECULAR, MATERIAL_RED_PLASTIC_SHININESS},
    // White Plastic
    {MATERIAL_WHITE_PLASTIC_AMBIENT, MATERIAL_WHITE_PLASTIC_DIFFUSE, MATERIAL_WHITE_PLASTIC_SPECULAR, MATERIAL_WHITE_PLASTIC_SHININESS},
    // Yellow Plastic
    {MATERIAL_YELLOW_PLASTIC_AMBIENT, MATERIAL_YELLOW_PLASTIC_DIFFUSE, MATERIAL_YELLOW_PLASTIC_SPECULAR, MATERIAL_YELLOW_PLASTIC_SHININESS},
    // Black Rubber
    {MATERIAL_BLACK_RUBBER_AMBIENT, MATERIAL_BLACK_RUBBER_DIFFUSE, MATERIAL_BLACK_RUBBER_SPECULAR, MATERIAL_BLACK_RUBBER_SHININESS},
    // Cyan Rubber
    {MATERIAL_CYAN_RUBBER_AMBIENT, MATERIAL_CYAN_RUBBER_DIFFUSE, MATERIAL_CYAN_RUBBER_SPECULAR, MATERIAL_CYAN_RUBBER_SHININESS},
    // Green Rubber
    {MATERIAL_GREEN_RUBBER_AMBIENT, MATERIAL_GREEN_RUBBER_DIFFUSE, MATERIAL_GREEN_RUBBER_SPECULAR, MATERIAL_GREEN_RUBBER_SHININESS},
    // Red Rubber
    {MATERIAL_RED_RUBBER_AMBIENT, MATERIAL_RED_RUBBER_DIFFUSE, MATERIAL_RED_RUBBER_SPECULAR, MATERIAL_RED_RUBBER_SHININESS},
    // White Rubber
    {MATERIAL_WHITE_RUBBER_AMBIENT, MATERIAL_WHITE_RUBBER_DIFFUSE, MATERIAL_WHITE_RUBBER_SPECULAR, MATERIAL_WHITE_RUBBER_SHININESS},
    // Yellow Rubber
    {MATERIAL_YELLOW_RUBBER_AMBIENT, MATERIAL_YELLOW_RUBBER_DIFFUSE, MATERIAL_YELLOW_RUBBER_SPECULAR, MATERIAL_YELLOW_RUBBER_SHININESS}
} };

inline const Material& getMaterial(MaterialType type) {
  return Materials[static_cast<size_t>(type)];
}
